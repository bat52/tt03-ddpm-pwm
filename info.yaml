--- 
# TinyTapeout project information
project:
  wokwi_id:    0        # If using wokwi, set this to your project's ID

# If using an HDL, set wokwi_id as 0 and uncomment and list your source files here. 
# Source files must be in ./src and you must list each source file separately
  source_files:        
    - bat52_pwm_ddpm_top.v
  top_module:  "bat52_pwm_ddpm_top"      # put the name of your top module here, make it unique by prepending your github username

# Keep a track of the submission yaml
yaml_version: 3.0

# As everyone will have access to all designs, try to make it easy for someone new to your design to know what
# it does and how to operate it. This info will be automatically collected and used to make a datasheet for the chip.
#
# Here is a great example: https://github.com/davidsiaw/tt02-davidsiaw-stackcalc/blob/38c5647f83aad2aec675d566aa3d67b98f0aac81/info.yaml
documentation: 
  author:       "Marco Merlin"             # Your name
  title:        "DDPM/PWM"                 # Project title
  language:     "myHDL, python, verilog"   # other examples include Verilog, Amaranth, VHDL, etc
  description:  "An implementation of a DDPM and PWM modulator with python libraries myHDL and pueda."  # Short description of what your project does

# Longer description of how the project works. You can use standard markdown format.
  how_it_works: |
      This project implements a "Dyadic Digital Pulse Modulation" (DDPM) modulator, as described in the articles:
      
      - "Standard Cell-Based Ultra-Compact DACs in 40nm CMOS", Aiello et al.
      https://www.researchgate.net/publication/335513725_Standard_Cell-Based_Ultra-Compact_DACs_in_40nm_CMOS
      - "All-Digital High Resolution D/A Conversion by Dyadic Digital Pulse Modulation", Crovetti
      (https://www.researchgate.net/publication/309012492_All-Digital_High_Resolution_DA_Conversion_by_Dyadic_Digital_Pulse_Modulation/citations)
      - "Spectral characteristics of DDPM streams and their application to all‚Äêdigital amplitude modulation", Crovetti
      https://www.researchgate.net/publication/348654600_Spectral_characteristics_of_DDPM_streams_and_their_application_to_all-digital_amplitude_modulation

      DDPM is a type of digital modulation technique used to transmit digital signals over a communication channel. 
      It is based on the concept of pulse amplitude modulation (PAM), where a series of pulses are used to represent 
      the information to be transmitted. 
      In DDPM, the pulse amplitudes are quantized in a dyadic manner, which means that they are quantized in 
      powers of two. This allows for efficient implementation using binary arithmetic. 

      A PWM modulator is added too, to provide a direct comparison.
      The DDPM and PWM modulator share the same counter, to reduce gate count.

# Instructions on how someone could test your project, include things like what buttons do what and how to set the clock if needed
  how_to_test:  |
      Explain how to test your project

# A description of what the inputs do
  inputs:               
    - clock
    - reset
    - in0
    - in1
    - in2
    - in3
    - in4
    - in5
# A description of what the outputs do
  outputs:
    - ddpm     / segment a
    - pwm      / segment b
    - sine[0]  / segment c
    - sine[1]  / segment d
    - sine[2]  / segment e
    - sine[3]  / segment f
    - sine[4]  / segment g
    - sine[5]  / dot

# The following fields are optional
  tag:          "pwm, ddpm"     # comma separated list of tags: test encryption, experiment, clock, animation, utility, industrial, pwm, fpga, alu, microprocessor, risc, riscv, sensor, signal generator, fft, filter, music, bcd, sound, serial, timer, random number generator, calculator, decoder, counter, puzzle, multiplier, game, oscillator,
  external_hw:  "clock source"  # Describe any external hardware needed
  discord:      ""              # Your discord handle, used for communication and automatically assigning tapeout role after a submission
  doc_link:     "https://github.com/bat52/tt03-ddpm-pwm/blob/main/README.md"   # URL to longer form documentation, eg the README.md in your repository
  clock_hz:     12500           # Clock frequency in Hz (if required)
  picture:      ""              # relative path to a picture in your repository
